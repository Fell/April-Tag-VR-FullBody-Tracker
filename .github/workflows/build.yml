name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  BUILD_TYPE: Release
  BINARY_DIR: build
  INSTALL_DIR: install
  DEPS_HASH_FILE: deps-hash.txt

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout project.
        uses: actions/checkout@v3

      - name: If on Linux, Install GTK3 dev build.
        if: ${{ matrix.os == 'ubuntu-latest'}}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libgtk-3-dev ffmpeg libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

      - name: Generate deps hash file with submodule commit hashes and combined hash of loose files
        id: deps-hash
        shell: bash
        run: |
          git submodule --cached status ./deps/ > ${{ env.DEPS_HASH_FILE }}
          echo "${{ hashFiles('deps/**') }}" >> ${{ env.DEPS_HASH_FILE }}
          echo "::set-output name=combined::$(sha256sum ${{ env.DEPS_HASH_FILE }} | cut -d ' ' -f 1)"

      - name: Check dep cache for matching OS and hash of deps hash file
        id: deps-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.BINARY_DIR }}/deps/install
            !${{ env.BINARY_DIR }}/deps/install/opencv/etc
          key: deps-${{ runner.os }}-${{ steps.deps-hash.outputs.combined }}

      - name: CMake configure, skip building deps if cached.
        run: >-
          cmake -B ${{ env.BINARY_DIR }}
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }}
          -DEXPORT_COMPILE_COMMANDS=0
          -DDEPS_SKIP_BUILD=${{ steps.deps-cache.outputs.cache-hit == 'true' }}

      - name: CMake build release.
        run: cmake --build ${{ env.BINARY_DIR }} --config ${{ env.BUILD_TYPE }} --target install

      - name: Upload install.
        uses: actions/upload-artifact@v3
        with:
          name: Install-${{ env.BUILD_TYPE }}-${{ runner.os }}
          retention-days: 7
          path: |
            ${{ env.INSTALL_DIR }}/

      - name: Upload build logs.
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Logs-${{ env.BUILD_TYPE }}-${{ runner.os }}
          retention-days: 14
          path: |
            ${{ env.BINARY_DIR }}/**/CMakeCache.txt
            ${{ env.BINARY_DIR }}/**/CMakeOutput.log
            ${{ env.BINARY_DIR }}/**/CMakeError.log
